/* FONTS */
/* Alternative font for Rijksoverheid font */
/* https://www.rijkshuisstijl.nl/publiek/modules/product/DigitalStyleGuide/default/index.aspx?ItemId=6745#:~:text=Kun%20je%20de%20webfonts%2C%20om,Verdana%20of%20Times%20New%20Roman.  */

/* RESETTING */
*,
*::after,
*::before {
    font-family: Verdana, Arial, "Times New Roman", sans-serif;
    margin: 0;
    padding: 0;
}

button,
summary,
nav li {
    cursor: pointer;
}

/* CUSTOM PROPERTIES */
:root {
    /* colors */
    --white: white;
    --black: black;

    /* styleguide */
    --logo-blue: #154273;
    --red: #d52b1e;
    --orange: #e17000;
    --dark-yellow: #ffb612;
    --dark-green: #275937;
    --green: #39870c;
    --dark-blue: #01689b;
    --blue: #007bc7;
    --light-blue: #8fcae7;
    --gray-1: #f3f3f3;
    --gray-2: #e6e6e6;
    --gray-3: #cccccc;
    --gray-4: #b4b4b4;
    --gray-5: #999999;
    --gray-6: #696969;
    --gray-7: #535353;

    /* validation */
    --validate-green: #39870c1e;
    --validate-red: #ff00001f;

    /* shadow */
    --gray-shadow1: #0000001a;
    --gray-shadow2: #00000033;
}

@media (prefers-color-scheme: dark) {
    /* CUSTOM PROPERTIES  */
    :root {
        /* colors */
        --white: #0b2644;
        --black: white;

        /* styleguide */
        --logo-blue: #154273;
        --dark-green: #39870c;
        --dark-blue: #01689b;
        --blue: #007bc7;
        --light-blue: #8fcae7;
        --gray-7: #f3f3f3;
        --gray-6: #e6e6e6;
        --gray-5: #cccccc;
        --gray-4: #b4b4b4;
        --gray-3: #999999;
        --gray-2: #707381;
        --gray-1: #2f2f2f;

        /* validation */
        --validate-green: #60785bab;
        --validate-red: #ff00001f;

        /* shadow */
        --gray-shadow1: #0000001a;
        --gray-shadow2: #00000033;
    }

    #nul,
    #vier {
        color: var(--black);
    }
}

/* FIX STYLING */
:focus {
    background-color: var(--gray-shadow1);
    color: var(--black);
    outline: none;
    border-radius: 0.1rem;
}

::selection {
    background: var(--dark-yellow);
    color: #000;
    text-shadow: none;
}
/* FIX INPUT FOCUS (NOT WORKING) */
input:focus {
    outline: var(--light-blue);
}

/* neeJS BACK-UP */
.no-js form {
    background-color: var(--red);
}

/* BODY */
body {
    background-color: var(--gray-2);
}

/* NAVIGATION */
nav {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

nav img {
    display: block;
    width: 10rem;
    padding-right: calc(50vw - 5em);
    padding-left: calc(50vw - 5em);
    padding-bottom: 1rem;
    background-color: var(--white);
}

a {
    text-decoration: none;
}

/*  PROGRESS BAR */
nav ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr;
}

nav li {
    display: flex;
    list-style: none;
    border-radius: 10rem;
    margin: 1em 0.5rem;
    padding: 0.5rem;
    width: 1rem;
    height: 1rem;
    background-color: var(--gray-4);
    text-align: center;
    align-items: center;
    justify-content: center;
}

/* MAIN */
main {
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin: 1.5rem;
}
/* FORM */
form {
    border: none;
}

p {
    margin-top: 1rem;
}

p:not(:last-child) {
    margin-top: 2rem;
}

/* p:first-child {
    margin-top: 1rem;
} */

p,
label,
legend {
    color: var(--gray-7);
}

input:user-valid {
    border-color: var(--green);
    background-color: var(--validate-green);
    color: var(--gray-7);
}

input:user-invalid {
    border-color: var(--red);
    background-color: var(--validate-red);
    color: var(--gray-7);
}

/* .uppercase {
    text-transform: uppercase;
} */

/* .lowercase {
    text-transform: lowercase;
} */

/* .capitalize {
    text-transform: capitalize;
} */

/* INTRODUCTIE */
main {
    & > section {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        background-color: var(--white);

        padding: 1em 1em 2em 2rem;
        margin: 1em 0;

        border: none;

        & ul {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            width: unset;

            & li {
                list-style: square inside;
            }
        }

        @media (width > 60rem) {
            max-width: 50rem;
            justify-content: center;
        }
    }
    @media (width > 60rem) {
        display: flex;
        align-items: center;
    }
}

/* FIELDSET */
fieldset {
    border: none;
    animation: smoothy 1s;
}

fieldset fieldset {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background-color: var(--white);

    padding: 1em 1em 2em 2rem;
    margin: 1em 0;

    border: none;
}

form > fieldset:not(:target) {
    display: none;
}
main:has(form > fieldset:target) > #nul {
    display: none;
}

html:has(#nul:target) li:nth-of-type(1),
html:has(#een:target) li:nth-of-type(2),
html:has(#twee:target) li:nth-of-type(3),
html:has(#drie:target) li:nth-of-type(4),
html:has(#vier:target) li:nth-of-type(5),
html:has(#vijf:target) li:nth-of-type(6) {
    background-color: var(--dark-green);
    color: var(--white);
}

html:has(#nul:target) li:nth-of-type(1) a,
html:has(#een:target) li:nth-of-type(2) a,
html:has(#twee:target) li:nth-of-type(3) a,
html:has(#drie:target) li:nth-of-type(4) a,
html:has(#vier:target) li:nth-of-type(5) a,
html:has(#vijf:target) li:nth-of-type(6) a,
html:has(#nul:target) li:nth-of-type(1) a:visited,
html:has(#een:target) li:nth-of-type(2) a:visited,
html:has(#twee:target) li:nth-of-type(3) a:visited,
html:has(#drie:target) li:nth-of-type(4) a:visited,
html:has(#vier:target) li:nth-of-type(5) a:visited,
html:has(#vijf:target) li:nth-of-type(6) a:visited {
    color: var(--white);
}

/* fieldset:has(+ fieldset)::after {
    background-color: #e60b0b;
    content: "";
    bottom: 100%;
    width: 100%;
    height: 0.25rem;
    margin-top: 1.5rem;
    background-color: #cc1f1f;
} */

/* section:not(:has(p))::before {
    content: "";
    display: block;
    width: 2rem;
    height: 0.1rem;
    margin-bottom: 0.5rem;
    background-color: var(--black);
} */

legend {
    background-color: var(--dark-blue);
    color: white;
    padding: 0.25em 0.5rem;
    margin-left: 0.5rem;
}

/* LABEL */
label {
    display: block;
    max-width: max-content;
    /* margin: 0.5em 1rem; */
    /* padding: 0.5em 0rem; */

    border: none;
}

.ja-nee label {
    display: flex;
    grid-template-rows: 1fr;
    grid-template-columns: 2em max-content;
    justify-content: center;
    align-items: center;
    /* margin: 0.5em 1rem; */
    padding: 1em 0em 0;
}
/* INPUT */
input {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    width: 20rem;
    padding: 0.5rem;
    margin-top: 0.5rem;
    border-radius: 0;

    border: solid 0.125em var(--gray-7);
}

.ja-nee input {
    display: block;
    width: inherit;
    margin: 0;
    padding: 0;
    border-radius: 0;
}

.ja-nee input[type="date"],
.ja-nee input[type="file"] {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 20rem;
    padding: 0.5rem;
    margin-top: 0.5rem;
    border-radius: 0;

    border: solid 0.125em var(--gray-7);
}
section:has(input[type="radio"]:required) p::after {
    content: "*";
    margin-left: 2px;
}
section:has(input[type="radio"]:required) label::before {
    content: none;
}
@layer requiredLabel {
    /* if input has a required atribute, then add "*" */
    label:has(input[required]) {
        display: grid;
        grid-template-columns: max-content 1fr;
    }

    label:has(input[required])::before {
        content: "*";
        margin-left: 2px;
        /* grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 2; */
        grid-area: 1/2;
    }

    label:has(input[required]) input {
        grid-column-start: 1;
        grid-column-end: 3;
    }

    section:has(input[required]) span {
        grid-row-start: 3;
        grid-row-end: 4;
        grid-column-start: 1;
        grid-column-end: 3;
    }
    /* ja-nee */
    .ja-nee label:has(input[required]) {
        display: grid;
        grid-template-columns: max-content 1fr 1fr;
    }

    .ja-nee label:has(input[required]) input {
        grid-area: 1/3;
    }
    .ja-nee label:has(input[required])::before {
        content: neene;
        /* margin-left: 2px; */
        /* grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 1;
    grid-row-end: 2; */
        /* grid-area: 1/2; */
    }

    /* input type="date" */
    input[type="date"] {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    /* input type="file" */
    .ja-nee label:has(input[type="file"]) input {
        grid-area: 1/1;
    }
    /* I didn't get it */
    .ja-nee label:has(input[type="file"]) {
        margin: 0;
        padding: 0;
    }
}

/* input type="submit" */
fieldset > div {
    display: flex;
    justify-content: flex-start;
    gap: 1rem;
    text-align: center;
}
input[type="submit"],
a {
    justify-self: flex-start;
    align-self: flex-start;
    font-family: Arial, Verdana, "Times New Roman", sans-serif;
    font-weight: bold;
    color: var(--white);
    background-color: var(--blue);
    border: none;
    padding: 1.25em 1rem;
    box-shadow: inset 0 -3px 0 var(--gray-shadow1);

    width: 10rem;
}
input[type="submit"],
a:hover {
    box-shadow: inset 0 -60px 0 var(--gray-shadow2);
    transition: box-shadow 0.4s;
}
#vier fieldset a {
    width: 15rem;
    padding: 0.5rem;
    background-color: var(--light-blue);
}

/* USE LATER FOR VALIDATION?? */
/* if one of the radio buttons not checked, than change the beckground of the submt */
/* fieldset:has(input[type="radio"]):has(:not(input[type="radio"]:checked)) a {
    background-color: red;
} */

fieldset:has(input[type="radio"]:indeterminate) input[type="submit"] {
    background-color: red;
}

/* .ja-no:has(input[required]) p::after { */
/* content: "*"; */
/* color: red; */
/* } */

/* section > p::before {
    content: "";
    display: block;
    width: 2rem;
    height: 0.1rem;
    margin-bottom: 0.5rem;
    background-color: var(--black);
} */

/* CONDITIONS */

/* omgekeerd */
.hideable {
    display: block;
}

label:has(.condition:not(:checked)) ~ .hideable {
    display: none;
}

/* error messages */
span {
    display: none;
}

input:user-invalid + span[data-error] {
    color: red;
    font-size: 0.9rem;
    display: block;

    animation: smooth 0.5s;
}

input:indeterminate span[data-error] {
    color: red;
    font-size: 0.9rem;
    display: block;

    animation: smooth 0.5s;
}

.ja-nee:has(span[data-error]) label {
    display: grid;
    grid-template-columns: max-content 1fr;
    grid-template-rows: 1fr;

    input {
        grid-area: 1/1;
    }
    span {
        margin-top: 0.5rem;
    }
}

input:user-invalid {
    border: solid red 1px;
}

label[for="adres"] {
    background-color: var(--gray-shadow1);
    padding: 0.5rem;
    margin: 0.5rem;
}

.gemachtigdeGegevens label {
    background-color: var(--gray-shadow1);
    margin: 0.5rem;
    /* padding: .2rem; */
}

#driea label {
    background-color: var(--gray-shadow1);
    margin: 0.5rem;
    padding: 0.5rem;
    max-width: unset;
}

#driea:has(label:nth-of-type(1) input:checked) span {
    display: block;
    width: max-content;
    background-color: var(--green);
    margin: .5rem;
    padding: .5em;
    color: white;
}
#driea:has(label:nth-of-type(1) input:checked) span a {
    background-color: unset;
    color: unset;
    box-shadow: unset;
}



/* ANIMATIONS */

@keyframes smooth {
    from {
        opacity: 0;
        color: var(--gray-6);
    }
    to {
        opacity: 100%;
        color: var(--red);
    }
}

@keyframes smoothy {
    from {
        opacity: 0;
        color: var(--gray-6);
    }
    to {
        opacity: 100%;
    }
}
